#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
public partial class VrijstellingenDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertOpleiding(Opleiding instance);
  partial void UpdateOpleiding(Opleiding instance);
  partial void DeleteOpleiding(Opleiding instance);
  partial void InsertVrijstelling(Vrijstelling instance);
  partial void UpdateVrijstelling(Vrijstelling instance);
  partial void DeleteVrijstelling(Vrijstelling instance);
  partial void InsertStudent(Student instance);
  partial void UpdateStudent(Student instance);
  partial void DeleteStudent(Student instance);
  partial void InsertUpload(Upload instance);
  partial void UpdateUpload(Upload instance);
  partial void DeleteUpload(Upload instance);
  partial void InsertVakken(Vakken instance);
  partial void UpdateVakken(Vakken instance);
  partial void DeleteVakken(Vakken instance);
  #endregion
	
	public VrijstellingenDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database1ConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public VrijstellingenDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VrijstellingenDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VrijstellingenDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VrijstellingenDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Opleiding> Opleidings
	{
		get
		{
			return this.GetTable<Opleiding>();
		}
	}
	
	public System.Data.Linq.Table<Vrijstelling> Vrijstellings
	{
		get
		{
			return this.GetTable<Vrijstelling>();
		}
	}
	
	public System.Data.Linq.Table<Student> Students
	{
		get
		{
			return this.GetTable<Student>();
		}
	}
	
	public System.Data.Linq.Table<Upload> Uploads
	{
		get
		{
			return this.GetTable<Upload>();
		}
	}
	
	public System.Data.Linq.Table<Vakken> Vakkens
	{
		get
		{
			return this.GetTable<Vakken>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOpleiding")]
public partial class Opleiding : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_opleidingID;
	
	private string _opleidingNaam;
	
	private EntitySet<Student> _Students;
	
	private EntitySet<Vakken> _tblVakkens;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_opleidingIDChanging(int value);
    partial void Onpk_opleidingIDChanged();
    partial void OnopleidingNaamChanging(string value);
    partial void OnopleidingNaamChanged();
    #endregion
	
	public Opleiding()
	{
		this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
		this._tblVakkens = new EntitySet<Vakken>(new Action<Vakken>(this.attach_tblVakkens), new Action<Vakken>(this.detach_tblVakkens));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_opleidingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_opleidingID
	{
		get
		{
			return this._pk_opleidingID;
		}
		set
		{
			if ((this._pk_opleidingID != value))
			{
				this.Onpk_opleidingIDChanging(value);
				this.SendPropertyChanging();
				this._pk_opleidingID = value;
				this.SendPropertyChanged("pk_opleidingID");
				this.Onpk_opleidingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opleidingNaam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string opleidingNaam
	{
		get
		{
			return this._opleidingNaam;
		}
		set
		{
			if ((this._opleidingNaam != value))
			{
				this.OnopleidingNaamChanging(value);
				this.SendPropertyChanging();
				this._opleidingNaam = value;
				this.SendPropertyChanged("opleidingNaam");
				this.OnopleidingNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOpleiding_Student", Storage="_Students", ThisKey="pk_opleidingID", OtherKey="fk_opleiding")]
	public EntitySet<Student> Students
	{
		get
		{
			return this._Students;
		}
		set
		{
			this._Students.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOpleiding_tblVakken", Storage="_tblVakkens", ThisKey="pk_opleidingID", OtherKey="fk_opleidingID")]
	public EntitySet<Vakken> Vakkens
	{
		get
		{
			return this._tblVakkens;
		}
		set
		{
			this._tblVakkens.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Opleiding = this;
	}
	
	private void detach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Opleiding = null;
	}
	
	private void attach_tblVakkens(Vakken entity)
	{
		this.SendPropertyChanging();
		entity.Opleiding1 = this;
	}
	
	private void detach_tblVakkens(Vakken entity)
	{
		this.SendPropertyChanging();
		entity.Opleiding1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblVrijstelling")]
public partial class Vrijstelling : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_VrijstellingID;
	
	private int _fk_vak;
	
	private string _vak_extern;
	
	private string _school;
	
	private string _studiepunten;
	
	private EntitySet<Upload> _tblUploads;
	
	private EntityRef<Vakken> _tblVakken;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_VrijstellingIDChanging(int value);
    partial void Onpk_VrijstellingIDChanged();
    partial void Onfk_vakChanging(int value);
    partial void Onfk_vakChanged();
    partial void Onvak_externChanging(string value);
    partial void Onvak_externChanged();
    partial void OnschoolChanging(string value);
    partial void OnschoolChanged();
    partial void OnstudiepuntenChanging(string value);
    partial void OnstudiepuntenChanged();
    #endregion
	
	public Vrijstelling()
	{
		this._tblUploads = new EntitySet<Upload>(new Action<Upload>(this.attach_tblUploads), new Action<Upload>(this.detach_tblUploads));
		this._tblVakken = default(EntityRef<Vakken>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_VrijstellingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_VrijstellingID
	{
		get
		{
			return this._pk_VrijstellingID;
		}
		set
		{
			if ((this._pk_VrijstellingID != value))
			{
				this.Onpk_VrijstellingIDChanging(value);
				this.SendPropertyChanging();
				this._pk_VrijstellingID = value;
				this.SendPropertyChanged("pk_VrijstellingID");
				this.Onpk_VrijstellingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_vak", DbType="Int NOT NULL")]
	public int fk_vak
	{
		get
		{
			return this._fk_vak;
		}
		set
		{
			if ((this._fk_vak != value))
			{
				if (this._tblVakken.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_vakChanging(value);
				this.SendPropertyChanging();
				this._fk_vak = value;
				this.SendPropertyChanged("fk_vak");
				this.Onfk_vakChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vak_extern", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string vak_extern
	{
		get
		{
			return this._vak_extern;
		}
		set
		{
			if ((this._vak_extern != value))
			{
				this.Onvak_externChanging(value);
				this.SendPropertyChanging();
				this._vak_extern = value;
				this.SendPropertyChanged("vak_extern");
				this.Onvak_externChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string school
	{
		get
		{
			return this._school;
		}
		set
		{
			if ((this._school != value))
			{
				this.OnschoolChanging(value);
				this.SendPropertyChanging();
				this._school = value;
				this.SendPropertyChanged("school");
				this.OnschoolChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studiepunten", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string studiepunten
	{
		get
		{
			return this._studiepunten;
		}
		set
		{
			if ((this._studiepunten != value))
			{
				this.OnstudiepuntenChanging(value);
				this.SendPropertyChanging();
				this._studiepunten = value;
				this.SendPropertyChanged("studiepunten");
				this.OnstudiepuntenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVrijstelling_tblUpload", Storage="_tblUploads", ThisKey="pk_VrijstellingID", OtherKey="fk_vrijstellingID")]
	public EntitySet<Upload> Uploads
	{
		get
		{
			return this._tblUploads;
		}
		set
		{
			this._tblUploads.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVakken_tblVrijstelling", Storage="_tblVakken", ThisKey="fk_vak", OtherKey="pk_vak", IsForeignKey=true)]
	public Vakken Vakken
	{
		get
		{
			return this._tblVakken.Entity;
		}
		set
		{
			Vakken previousValue = this._tblVakken.Entity;
			if (((previousValue != value) 
						|| (this._tblVakken.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblVakken.Entity = null;
					previousValue.Vrijstellings.Remove(this);
				}
				this._tblVakken.Entity = value;
				if ((value != null))
				{
					value.Vrijstellings.Add(this);
					this._fk_vak = value.pk_vak;
				}
				else
				{
					this._fk_vak = default(int);
				}
				this.SendPropertyChanged("Vakken");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblUploads(Upload entity)
	{
		this.SendPropertyChanging();
		entity.Vrijstelling = this;
	}
	
	private void detach_tblUploads(Upload entity)
	{
		this.SendPropertyChanging();
		entity.Vrijstelling = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStudent")]
public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_student;
	
	private int _fk_opleiding;
	
	private string _studentNr;
	
	private string _studentNaam;
	
	private string _studentVoornaam;
	
	private string _studentWachtwoord;
	
	private EntityRef<Opleiding> _tblOpleiding;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_studentChanging(int value);
    partial void Onpk_studentChanged();
    partial void Onfk_opleidingChanging(int value);
    partial void Onfk_opleidingChanged();
    partial void OnstudentNrChanging(string value);
    partial void OnstudentNrChanged();
    partial void OnstudentNaamChanging(string value);
    partial void OnstudentNaamChanged();
    partial void OnstudentVoornaamChanging(string value);
    partial void OnstudentVoornaamChanged();
    partial void OnstudentWachtwoordChanging(string value);
    partial void OnstudentWachtwoordChanged();
    #endregion
	
	public Student()
	{
		this._tblOpleiding = default(EntityRef<Opleiding>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_student", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_student
	{
		get
		{
			return this._pk_student;
		}
		set
		{
			if ((this._pk_student != value))
			{
				this.Onpk_studentChanging(value);
				this.SendPropertyChanging();
				this._pk_student = value;
				this.SendPropertyChanged("pk_student");
				this.Onpk_studentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_opleiding", DbType="Int NOT NULL")]
	public int fk_opleiding
	{
		get
		{
			return this._fk_opleiding;
		}
		set
		{
			if ((this._fk_opleiding != value))
			{
				if (this._tblOpleiding.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_opleidingChanging(value);
				this.SendPropertyChanging();
				this._fk_opleiding = value;
				this.SendPropertyChanged("fk_opleiding");
				this.Onfk_opleidingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentNr", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string studentNr
	{
		get
		{
			return this._studentNr;
		}
		set
		{
			if ((this._studentNr != value))
			{
				this.OnstudentNrChanging(value);
				this.SendPropertyChanging();
				this._studentNr = value;
				this.SendPropertyChanged("studentNr");
				this.OnstudentNrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentNaam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string studentNaam
	{
		get
		{
			return this._studentNaam;
		}
		set
		{
			if ((this._studentNaam != value))
			{
				this.OnstudentNaamChanging(value);
				this.SendPropertyChanging();
				this._studentNaam = value;
				this.SendPropertyChanged("studentNaam");
				this.OnstudentNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentVoornaam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string studentVoornaam
	{
		get
		{
			return this._studentVoornaam;
		}
		set
		{
			if ((this._studentVoornaam != value))
			{
				this.OnstudentVoornaamChanging(value);
				this.SendPropertyChanging();
				this._studentVoornaam = value;
				this.SendPropertyChanged("studentVoornaam");
				this.OnstudentVoornaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentWachtwoord", DbType="NVarChar(MAX)")]
	public string studentWachtwoord
	{
		get
		{
			return this._studentWachtwoord;
		}
		set
		{
			if ((this._studentWachtwoord != value))
			{
				this.OnstudentWachtwoordChanging(value);
				this.SendPropertyChanging();
				this._studentWachtwoord = value;
				this.SendPropertyChanged("studentWachtwoord");
				this.OnstudentWachtwoordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOpleiding_Student", Storage="_tblOpleiding", ThisKey="fk_opleiding", OtherKey="pk_opleidingID", IsForeignKey=true)]
	public Opleiding Opleiding
	{
		get
		{
			return this._tblOpleiding.Entity;
		}
		set
		{
			Opleiding previousValue = this._tblOpleiding.Entity;
			if (((previousValue != value) 
						|| (this._tblOpleiding.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblOpleiding.Entity = null;
					previousValue.Students.Remove(this);
				}
				this._tblOpleiding.Entity = value;
				if ((value != null))
				{
					value.Students.Add(this);
					this._fk_opleiding = value.pk_opleidingID;
				}
				else
				{
					this._fk_opleiding = default(int);
				}
				this.SendPropertyChanged("Opleiding");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUpload")]
public partial class Upload : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UploadID;
	
	private int _fk_vrijstellingID;
	
	private string _titel;
	
	private double _type;
	
	private EntityRef<Vrijstelling> _tblVrijstelling;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUploadIDChanging(int value);
    partial void OnUploadIDChanged();
    partial void Onfk_vrijstellingIDChanging(int value);
    partial void Onfk_vrijstellingIDChanged();
    partial void OntitelChanging(string value);
    partial void OntitelChanged();
    partial void OntypeChanging(double value);
    partial void OntypeChanged();
    #endregion
	
	public Upload()
	{
		this._tblVrijstelling = default(EntityRef<Vrijstelling>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UploadID
	{
		get
		{
			return this._UploadID;
		}
		set
		{
			if ((this._UploadID != value))
			{
				this.OnUploadIDChanging(value);
				this.SendPropertyChanging();
				this._UploadID = value;
				this.SendPropertyChanged("UploadID");
				this.OnUploadIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_vrijstellingID", DbType="Int NOT NULL")]
	public int fk_vrijstellingID
	{
		get
		{
			return this._fk_vrijstellingID;
		}
		set
		{
			if ((this._fk_vrijstellingID != value))
			{
				if (this._tblVrijstelling.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_vrijstellingIDChanging(value);
				this.SendPropertyChanging();
				this._fk_vrijstellingID = value;
				this.SendPropertyChanged("fk_vrijstellingID");
				this.Onfk_vrijstellingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titel", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string titel
	{
		get
		{
			return this._titel;
		}
		set
		{
			if ((this._titel != value))
			{
				this.OntitelChanging(value);
				this.SendPropertyChanging();
				this._titel = value;
				this.SendPropertyChanged("titel");
				this.OntitelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Float NOT NULL")]
	public double type
	{
		get
		{
			return this._type;
		}
		set
		{
			if ((this._type != value))
			{
				this.OntypeChanging(value);
				this.SendPropertyChanging();
				this._type = value;
				this.SendPropertyChanged("type");
				this.OntypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVrijstelling_tblUpload", Storage="_tblVrijstelling", ThisKey="fk_vrijstellingID", OtherKey="pk_VrijstellingID", IsForeignKey=true)]
	public Vrijstelling Vrijstelling
	{
		get
		{
			return this._tblVrijstelling.Entity;
		}
		set
		{
			Vrijstelling previousValue = this._tblVrijstelling.Entity;
			if (((previousValue != value) 
						|| (this._tblVrijstelling.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblVrijstelling.Entity = null;
					previousValue.Uploads.Remove(this);
				}
				this._tblVrijstelling.Entity = value;
				if ((value != null))
				{
					value.Uploads.Add(this);
					this._fk_vrijstellingID = value.pk_VrijstellingID;
				}
				else
				{
					this._fk_vrijstellingID = default(int);
				}
				this.SendPropertyChanged("Vrijstelling");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblVakken")]
public partial class Vakken : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_vak;
	
	private string _opleiding;
	
	private int _fk_opleidingID;
	
	private EntitySet<Vrijstelling> _tblVrijstellings;
	
	private EntityRef<Opleiding> _tblOpleiding;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_vakChanging(int value);
    partial void Onpk_vakChanged();
    partial void OnopleidingChanging(string value);
    partial void OnopleidingChanged();
    partial void Onfk_opleidingIDChanging(int value);
    partial void Onfk_opleidingIDChanged();
    #endregion
	
	public Vakken()
	{
		this._tblVrijstellings = new EntitySet<Vrijstelling>(new Action<Vrijstelling>(this.attach_tblVrijstellings), new Action<Vrijstelling>(this.detach_tblVrijstellings));
		this._tblOpleiding = default(EntityRef<Opleiding>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_vak", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_vak
	{
		get
		{
			return this._pk_vak;
		}
		set
		{
			if ((this._pk_vak != value))
			{
				this.Onpk_vakChanging(value);
				this.SendPropertyChanging();
				this._pk_vak = value;
				this.SendPropertyChanged("pk_vak");
				this.Onpk_vakChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opleiding", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string opleiding
	{
		get
		{
			return this._opleiding;
		}
		set
		{
			if ((this._opleiding != value))
			{
				this.OnopleidingChanging(value);
				this.SendPropertyChanging();
				this._opleiding = value;
				this.SendPropertyChanged("opleiding");
				this.OnopleidingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_opleidingID", DbType="Int NOT NULL")]
	public int fk_opleidingID
	{
		get
		{
			return this._fk_opleidingID;
		}
		set
		{
			if ((this._fk_opleidingID != value))
			{
				if (this._tblOpleiding.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_opleidingIDChanging(value);
				this.SendPropertyChanging();
				this._fk_opleidingID = value;
				this.SendPropertyChanged("fk_opleidingID");
				this.Onfk_opleidingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVakken_tblVrijstelling", Storage="_tblVrijstellings", ThisKey="pk_vak", OtherKey="fk_vak")]
	public EntitySet<Vrijstelling> Vrijstellings
	{
		get
		{
			return this._tblVrijstellings;
		}
		set
		{
			this._tblVrijstellings.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOpleiding_tblVakken", Storage="_tblOpleiding", ThisKey="fk_opleidingID", OtherKey="pk_opleidingID", IsForeignKey=true)]
	public Opleiding Opleiding1
	{
		get
		{
			return this._tblOpleiding.Entity;
		}
		set
		{
			Opleiding previousValue = this._tblOpleiding.Entity;
			if (((previousValue != value) 
						|| (this._tblOpleiding.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblOpleiding.Entity = null;
					previousValue.Vakkens.Remove(this);
				}
				this._tblOpleiding.Entity = value;
				if ((value != null))
				{
					value.Vakkens.Add(this);
					this._fk_opleidingID = value.pk_opleidingID;
				}
				else
				{
					this._fk_opleidingID = default(int);
				}
				this.SendPropertyChanged("Opleiding1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblVrijstellings(Vrijstelling entity)
	{
		this.SendPropertyChanging();
		entity.Vakken = this;
	}
	
	private void detach_tblVrijstellings(Vrijstelling entity)
	{
		this.SendPropertyChanging();
		entity.Vakken = null;
	}
}
#pragma warning restore 1591
